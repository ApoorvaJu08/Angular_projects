{"version":3,"file":"ckeditor-ckeditor5-angular.js.map","sources":["ng://@ckeditor/ckeditor5-angular/ckeditor.ts","ng://@ckeditor/ckeditor5-angular/ckeditor.component.ts","ng://@ckeditor/ckeditor5-angular/ckeditor.module.ts"],"sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * Basic typings for the CKEditor5 elements.\n */\nexport namespace CKEditor5 {\n\n\t/**\n\t * The CKEditor5 editor constructor.\n\t */\n\texport interface EditorConstructor {\n\t\tcreate( sourceElementOrData: HTMLElement | string, config?: Config ): Promise<Editor>;\n\t}\n\n\t/**\n\t * The CKEditor5 editor config.\n\t */\n\texport interface Config {\n\t\t[ key: string ]: any;\n\t}\n\n\t/**\n\t * The event object passed to CKEditor5 event callbacks.\n\t *\n\t * See https://ckeditor.com/docs/ckeditor5/latest/api/module_utils_eventinfo-EventInfo.html\n\t */\n\texport interface EventInfo<EventName extends string> {\n\t\treadonly name: EventName;\n\t\treadonly path: any[];\n\t\treadonly source: any;\n\t\treturn?: any;\n\n\t\toff(): void;\n\t\tstop(): void;\n\t}\n\n\t/**\n\t * The base Editor class.\n\t *\n\t * See https://ckeditor.com/docs/ckeditor5/latest/api/module_core_editor_editor-Editor.html\n\t */\n\texport interface BaseEditor {\n\t\treadonly commands: any;\n\t\treadonly config: any;\n\t\treadonly conversion: any;\n\t\treadonly data: any;\n\t\treadonly editing: any;\n\t\treadonly keystrokes: any;\n\t\treadonly locale: any;\n\t\treadonly model: any;\n\t\treadonly plugins: any;\n\t\treadonly state: 'initializing' | 'ready' | 'destroyed';\n\n\t\tisReadOnly: boolean;\n\n\t\tdelegate( events: string[] ): any;\n\t\tdestroy(): Promise<void>;\n\t\texecute( commandName: string, ...params: any[] ): any;\n\t\tfire( eventName: string, args?: any ): any;\n\t\tlistenTo( emitter: any, eventName: string, callback: Function, options?: any ): void;\n\t\toff( eventName: string, callback: Function ): void;\n\t\ton( eventName: string, callback: Function, options?: any ): void;\n\t\tonce( eventName: string, callback: Function, options?: any ): void;\n\t\tstopListening( emitter: any, eventName: string, callback: Function ): void;\n\t\tt( ...args: any[] ): void;\n\n\t\t[ property: string ]: any;\n\t}\n\n\t/**\n\t * The CKEditor5 DataApi interface.\n\t *\n\t * See https://ckeditor.com/docs/ckeditor5/latest/api/module_core_editor_utils_dataapimixin-DataApi.html.\n\t */\n\texport interface DataApi {\n\t\tgetData(): string;\n\t\tsetData( data: string ): void;\n\t}\n\n\t/**\n\t * A CKEditor5 editor that implements the\n\t * [DataApi interface](https://ckeditor.com/docs/ckeditor5/latest/api/module_core_editor_utils_dataapimixin-DataApi.html).\n\t * E.g. the `ClassicEditor`, `InlineEditor`, etc.\n\t */\n\texport interface Editor extends BaseEditor, DataApi {}\n}\n","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\nimport {\n\tComponent,\n\tInput,\n\tOutput,\n\tNgZone,\n\tEventEmitter,\n\tforwardRef,\n\tAfterViewInit, OnDestroy,\n\tElementRef\n} from '@angular/core';\n\nimport {\n\tControlValueAccessor,\n\tNG_VALUE_ACCESSOR\n} from '@angular/forms';\n\nimport { CKEditor5 } from './ckeditor';\n\n@Component( {\n\tselector: 'ckeditor',\n\ttemplate: '<ng-template></ng-template>',\n\n\t// Integration with @angular/forms.\n\tproviders: [\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tuseExisting: forwardRef( () => CKEditorComponent ),\n\t\t\tmulti: true,\n\t\t}\n\t]\n} )\nexport class CKEditorComponent implements AfterViewInit, OnDestroy, ControlValueAccessor {\n\t/**\n\t * The reference to the DOM element created by the component.\n\t */\n\tprivate elementRef!: ElementRef<HTMLElement>;\n\n\t/**\n\t * The constructor of the editor to be used for the instance of the component.\n\t * It can be e.g. the `ClassicEditorBuild`, `InlineEditorBuild` or some custom editor.\n\t */\n\t@Input() public editor?: CKEditor5.EditorConstructor;\n\n\t/**\n\t * The configuration of the editor.\n\t * See https://ckeditor.com/docs/ckeditor5/latest/api/module_core_editor_editorconfig-EditorConfig.html\n\t * to learn more.\n\t */\n\t@Input() public config: CKEditor5.Config = {};\n\n\t/**\n\t * The initial data of the editor. Useful when not using the ngModel.\n\t * See https://angular.io/api/forms/NgModel to learn more.\n\t */\n\t@Input() public data = '';\n\n\t/**\n\t * Tag name of the editor component.\n\t *\n\t * The default tag is 'div'.\n\t */\n\t@Input() public tagName = 'div';\n\n\t/**\n\t * When set `true`, the editor becomes read-only.\n\t * See https://ckeditor.com/docs/ckeditor5/latest/api/module_core_editor_editor-Editor.html#member-isReadOnly\n\t * to learn more.\n\t */\n\t@Input() public set disabled( isDisabled: boolean ) {\n\t\tthis.setDisabledState( isDisabled );\n\t}\n\n\tpublic get disabled() {\n\t\tif ( this.editorInstance ) {\n\t\t\treturn this.editorInstance.isReadOnly;\n\t\t}\n\n\t\treturn this.initialIsDisabled;\n\t}\n\n\t/**\n\t * Fires when the editor is ready. It corresponds with the `editor#ready`\n\t * https://ckeditor.com/docs/ckeditor5/latest/api/module_core_editor_editor-Editor.html#event-ready\n\t * event.\n\t */\n\t@Output() public ready = new EventEmitter<CKEditor5.Editor>();\n\n\t/**\n\t * Fires when the content of the editor has changed. It corresponds with the `editor.model.document#change`\n\t * https://ckeditor.com/docs/ckeditor5/latest/api/module_engine_model_document-Document.html#event-change\n\t * event.\n\t */\n\t@Output() public change: EventEmitter<ChangeEvent> = new EventEmitter<ChangeEvent>();\n\n\t/**\n\t * Fires when the editing view of the editor is blurred. It corresponds with the `editor.editing.view.document#blur`\n\t * https://ckeditor.com/docs/ckeditor5/latest/api/module_engine_view_document-Document.html#event-event:blur\n\t * event.\n\t */\n\t@Output() public blur: EventEmitter<BlurEvent> = new EventEmitter<BlurEvent>();\n\n\t/**\n\t * Fires when the editing view of the editor is focused. It corresponds with the `editor.editing.view.document#focus`\n\t * https://ckeditor.com/docs/ckeditor5/latest/api/module_engine_view_document-Document.html#event-event:focus\n\t * event.\n\t */\n\t@Output() public focus: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n\n\t/**\n\t * The instance of the editor created by this component.\n\t */\n\tpublic editorInstance: CKEditor5.Editor | null = null;\n\n\t/**\n\t * If the component is readâonly before the editor instance is created, it remembers that state,\n\t * so the editor can become readâonly once it is ready.\n\t */\n\tprivate initialIsDisabled = false;\n\n\t/**\n\t * An instance of https://angular.io/api/core/NgZone to allow the interaction with the editor\n\t * withing the Angular event loop.\n\t */\n\tprivate ngZone: NgZone;\n\n\t/**\n\t * A callback executed when the content of the editor changes. Part of the\n\t * `ControlValueAccessor` (https://angular.io/api/forms/ControlValueAccessor) interface.\n\t *\n\t * Note: Unset unless the component uses the `ngModel`.\n\t */\n\tprivate cvaOnChange?: ( data: string ) => void;\n\n\t/**\n\t * A callback executed when the editor has been blurred. Part of the\n\t * `ControlValueAccessor` (https://angular.io/api/forms/ControlValueAccessor) interface.\n\t *\n\t * Note: Unset unless the component uses the `ngModel`.\n\t */\n\tprivate cvaOnTouched?: () => void;\n\n\t/**\n\t * Reference to the source element used by the editor.\n\t */\n\tprivate editorElement?: HTMLElement;\n\n\t/**\n\t * A lock flag preventing from calling the `cvaOnChange()` during setting editor data.\n\t */\n\tprivate isEditorSettingData = false;\n\n\tpublic constructor( elementRef: ElementRef, ngZone: NgZone ) {\n\t\tthis.ngZone = ngZone;\n\t\tthis.elementRef = elementRef;\n\t}\n\n\t// Implementing the AfterViewInit interface.\n\tpublic ngAfterViewInit() {\n\t\tthis.ngZone.runOutsideAngular( () => {\n\t\t\tthis.createEditor();\n\t\t} );\n\t}\n\n\t// Implementing the OnDestroy interface.\n\tpublic ngOnDestroy() {\n\t\tif ( this.editorInstance ) {\n\t\t\tthis.editorInstance.destroy();\n\t\t\tthis.editorInstance = null;\n\t\t}\n\t}\n\n\t// Implementing the ControlValueAccessor interface (only when binding to ngModel).\n\tpublic writeValue( value: string | null ): void {\n\t\t// This method is called with the `null` value when the form resets.\n\t\t// A component's responsibility is to restore to the initial state.\n\t\tif ( value === null ) {\n\t\t\tvalue = '';\n\t\t}\n\n\t\t// If already initialized.\n\t\tif ( this.editorInstance ) {\n\t\t\t// The lock mechanism prevents from calling `cvaOnChange()` during changing\n\t\t\t// the editor state. See #139\n\t\t\tthis.isEditorSettingData = true;\n\t\t\tthis.editorInstance.setData( value );\n\t\t\tthis.isEditorSettingData = false;\n\t\t}\n\t\t// If not, wait for it to be ready; store the data.\n\t\telse {\n\t\t\tthis.data = value;\n\n\t\t\t// If the editor element is already available, then update its content.\n\t\t\t// If the ngModel is used then the editor element should be updated directly here.\n\t\t\tif ( this.editorElement ) {\n\t\t\t\tthis.editorElement.innerHTML = this.data;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Implementing the ControlValueAccessor interface (only when binding to ngModel).\n\tpublic registerOnChange( callback: ( data: string ) => void ): void {\n\t\tthis.cvaOnChange = callback;\n\t}\n\n\t// Implementing the ControlValueAccessor interface (only when binding to ngModel).\n\tpublic registerOnTouched( callback: () => void ): void {\n\t\tthis.cvaOnTouched = callback;\n\t}\n\n\t// Implementing the ControlValueAccessor interface (only when binding to ngModel).\n\tpublic setDisabledState( isDisabled: boolean ): void {\n\t\t// If already initialized\n\t\tif ( this.editorInstance ) {\n\t\t\tthis.editorInstance.isReadOnly = isDisabled;\n\t\t}\n\t\t// If not, wait for it to be ready; store the state.\n\t\telse {\n\t\t\tthis.initialIsDisabled = isDisabled;\n\t\t}\n\t}\n\n\t/**\n\t * Creates the editor instance, sets initial editor data, then integrates\n\t * the editor with the Angular component. This method does not use the `editor.setData()`\n\t * because of the issue in the collaboration mode (#6).\n\t */\n\tprivate createEditor(): Promise<void> {\n\t\tconst element = document.createElement( this.tagName );\n\t\tthis.editorElement = element;\n\n\t\tif ( this.data && this.config.initialData ) {\n\t\t\tthrow new Error( 'Editor data should be provided either using `config.initialData` or `data` properties.' );\n\t\t}\n\n\t\t// Merge two possible ways of providing data into the `config.initialData` field.\n\t\tconst config = {\n\t\t\t...this.config,\n\t\t\tinitialData: this.config.initialData || this.data || ''\n\t\t};\n\n\t\tthis.elementRef.nativeElement.appendChild( element );\n\n\t\treturn this.editor!.create( element, config )\n\t\t\t.then( editor => {\n\t\t\t\tthis.editorInstance = editor;\n\n\t\t\t\tif ( this.initialIsDisabled ) {\n\t\t\t\t\teditor.isReadOnly = this.initialIsDisabled;\n\t\t\t\t}\n\n\t\t\t\tthis.ngZone.run( () => {\n\t\t\t\t\tthis.ready.emit( editor );\n\t\t\t\t} );\n\n\t\t\t\tthis.setUpEditorEvents( editor );\n\t\t\t} )\n\t\t\t.catch( ( err: Error ) => {\n\t\t\t\tconsole.error( err.stack );\n\t\t\t} );\n\t}\n\n\t/**\n\t * Integrates the editor with the component by attaching related event listeners.\n\t */\n\tprivate setUpEditorEvents( editor: CKEditor5.Editor ): void {\n\t\tconst modelDocument = editor.model.document;\n\t\tconst viewDocument = editor.editing.view.document;\n\n\t\tmodelDocument.on( 'change:data', ( evt: CKEditor5.EventInfo<'change:data'> ) => {\n\t\t\tthis.ngZone.run( () => {\n\t\t\t\tif ( this.cvaOnChange && !this.isEditorSettingData ) {\n\t\t\t\t\tconst data = editor.getData();\n\n\t\t\t\t\tthis.cvaOnChange( data );\n\t\t\t\t}\n\n\t\t\t\tthis.change.emit( { event: evt, editor } );\n\t\t\t} );\n\t\t} );\n\n\t\tviewDocument.on( 'focus', ( evt: CKEditor5.EventInfo<'focus'> ) => {\n\t\t\tthis.ngZone.run( () => {\n\t\t\t\tthis.focus.emit( { event: evt, editor } );\n\t\t\t} );\n\t\t} );\n\n\t\tviewDocument.on( 'blur', ( evt: CKEditor5.EventInfo<'blur'> ) => {\n\t\t\tthis.ngZone.run( () => {\n\t\t\t\tif ( this.cvaOnTouched ) {\n\t\t\t\t\tthis.cvaOnTouched();\n\t\t\t\t}\n\n\t\t\t\tthis.blur.emit( { event: evt, editor } );\n\t\t\t} );\n\t\t} );\n\t}\n}\n\nexport interface BlurEvent {\n\tevent: CKEditor5.EventInfo<'blur'>;\n\teditor: CKEditor5.Editor;\n}\n\nexport interface FocusEvent {\n\tevent: CKEditor5.EventInfo<'focus'>;\n\teditor: CKEditor5.Editor;\n}\n\nexport interface ChangeEvent {\n\tevent: CKEditor5.EventInfo<'change:data'>;\n\teditor: CKEditor5.Editor;\n}\n","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { CKEditorComponent } from './ckeditor.component';\n\n@NgModule( {\n\timports: [ FormsModule, CommonModule ],\n\tdeclarations: [ CKEditorComponent ],\n\texports: [ CKEditorComponent ]\n} )\nexport class CKEditorModule {}\n"],"names":[],"mappings":"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"}
